// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGHSSVidaPlus.Infrastructure.Data.Context;

#nullable disable

namespace SGHSSVidaPlus.Infrastructure.Data.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    [Migration("20250707170935_AddDefaultAtendenteProfessional")]
    partial class AddDefaultAtendenteProfessional
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataEncerramento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraAgendamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<bool>("Encerrado")
                        .HasColumnType("bit");

                    b.Property<string>("Local")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("ProfissionalResponsavelId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioEncerramento")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProfissionalResponsavelId");

                    b.ToTable("Agendamentos", (string)null);
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.AgendamentoPaciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<bool>("AtendimentoFinalizado")
                        .HasColumnType("bit");

                    b.Property<bool>("Compareceu")
                        .HasColumnType("bit");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("AgendamentosPacientes", (string)null);
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.CursosCertificacoesProfissionalSaude", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnoConclusao")
                        .IsRequired()
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<double>("DuracaoHoras")
                        .HasColumnType("float");

                    b.Property<string>("InstituicaoEnsino")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("ProfissionalSaudeId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ProfissionalSaudeId");

                    b.ToTable("CursosCertificacoesProfissionalSaude", (string)null);
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.FormacaoAcademicaProfissionalSaude", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnoConclusao")
                        .IsRequired()
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("InstituicaoEnsino")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("ProfissionalSaudeId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ProfissionalSaudeId");

                    b.ToTable("FormacoesAcademicasProfissionalSaude", (string)null);
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.HistoricoPaciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataEvento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(4000)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("ProfissionalResponsavel")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("HistoricoPacientes", (string)null);
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UsuarioInclusao")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("Pacientes", (string)null);
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.PacienteContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsWhatsApp")
                        .HasColumnType("bit");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("PacienteContatos", (string)null);
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.ProfissionalSaude", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EspecialidadeCargo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RegistroConselho")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UsuarioInclusao")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("ProfissionalSaude", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Cargo = "Atendente",
                            DataInclusao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "atendente.padrao@sghssvidaplus.com.br",
                            EspecialidadeCargo = "Geral",
                            Nome = "Atendente de Agendamentos Pendentes",
                            RegistroConselho = "N/A",
                            Telefone = "(XX) XXXX-XXXX",
                            UsuarioInclusao = "Sistema"
                        });
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.Agendamento", b =>
                {
                    b.HasOne("SGHSSVidaPlus.Domain.Entities.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .IsRequired();

                    b.HasOne("SGHSSVidaPlus.Domain.Entities.ProfissionalSaude", "ProfissionalResponsavel")
                        .WithMany("AgendamentosRealizados")
                        .HasForeignKey("ProfissionalResponsavelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("ProfissionalResponsavel");
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.AgendamentoPaciente", b =>
                {
                    b.HasOne("SGHSSVidaPlus.Domain.Entities.Agendamento", "Agendamento")
                        .WithMany("PacientesAgendados")
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SGHSSVidaPlus.Domain.Entities.Paciente", "Paciente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Agendamento");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.CursosCertificacoesProfissionalSaude", b =>
                {
                    b.HasOne("SGHSSVidaPlus.Domain.Entities.ProfissionalSaude", "ProfissionalSaude")
                        .WithMany("Cursos")
                        .HasForeignKey("ProfissionalSaudeId")
                        .IsRequired();

                    b.Navigation("ProfissionalSaude");
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.FormacaoAcademicaProfissionalSaude", b =>
                {
                    b.HasOne("SGHSSVidaPlus.Domain.Entities.ProfissionalSaude", "ProfissionalSaude")
                        .WithMany("Formacao")
                        .HasForeignKey("ProfissionalSaudeId")
                        .IsRequired();

                    b.Navigation("ProfissionalSaude");
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.HistoricoPaciente", b =>
                {
                    b.HasOne("SGHSSVidaPlus.Domain.Entities.Paciente", "Paciente")
                        .WithMany("Historico")
                        .HasForeignKey("PacienteId")
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.PacienteContato", b =>
                {
                    b.HasOne("SGHSSVidaPlus.Domain.Entities.Paciente", "Paciente")
                        .WithMany("Contatos")
                        .HasForeignKey("PacienteId")
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.Agendamento", b =>
                {
                    b.Navigation("PacientesAgendados");
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.Paciente", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Contatos");

                    b.Navigation("Historico");
                });

            modelBuilder.Entity("SGHSSVidaPlus.Domain.Entities.ProfissionalSaude", b =>
                {
                    b.Navigation("AgendamentosRealizados");

                    b.Navigation("Cursos");

                    b.Navigation("Formacao");
                });
#pragma warning restore 612, 618
        }
    }
}
