// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Selecao.Infrastructure.Data.Context;

#nullable disable

namespace Selecao.Infrastructure.Data.Migrations
{
    [DbContext(typeof(SelecaoContext))]
    [Migration("20241205191701_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Selecao.Domain.Entities.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Banido")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Selecionado")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Candidatos", (string)null);
                });

            modelBuilder.Entity("Selecao.Domain.Entities.CandidatoContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsWhatsApp")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.ToTable("CandidatosContatos", (string)null);
                });

            modelBuilder.Entity("Selecao.Domain.Entities.CandidatoCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnoConclusao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<double>("DuracaoHoras")
                        .HasColumnType("float");

                    b.Property<string>("InstituicaoEnsino")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.ToTable("CandidatoCursos");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.CandidatoExperiencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Duracao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Empregador")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInformatica")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Termino")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrabalhoAtual")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.ToTable("CandidatoExperiencias");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.CandidatoFormacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnoConclusao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("InstituicaoEnsino")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.ToTable("CandidatoFormacoes");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.CandidatoSelecaoCandidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("SelecaoId")
                        .HasColumnType("int");

                    b.Property<bool>("Selecionado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("SelecaoId");

                    b.ToTable("CandidatoSelecao");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.EtapaSelecao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("EtapasSelecao", (string)null);
                });

            modelBuilder.Entity("Selecao.Domain.Entities.EtapaSelecaoCandidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EtapaId")
                        .HasColumnType("int");

                    b.Property<int>("SelecaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EtapaId");

                    b.HasIndex("SelecaoId");

                    b.ToTable("EtapaSelecao");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.SelecaoCandidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DataEncerramento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Encerrado")
                        .HasColumnType("bit");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("UsuarioEncerramento")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Vagas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Selecoes", (string)null);
                });

            modelBuilder.Entity("Selecao.Domain.Entities.CandidatoContato", b =>
                {
                    b.HasOne("Selecao.Domain.Entities.Candidato", "Candidato")
                        .WithMany("Contatos")
                        .HasForeignKey("CandidatoId")
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.CandidatoCurso", b =>
                {
                    b.HasOne("Selecao.Domain.Entities.Candidato", "Candidato")
                        .WithMany("Cursos")
                        .HasForeignKey("CandidatoId")
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.CandidatoExperiencia", b =>
                {
                    b.HasOne("Selecao.Domain.Entities.Candidato", "Candidato")
                        .WithMany("Experiencias")
                        .HasForeignKey("CandidatoId")
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.CandidatoFormacao", b =>
                {
                    b.HasOne("Selecao.Domain.Entities.Candidato", "Candidato")
                        .WithMany("Formacao")
                        .HasForeignKey("CandidatoId")
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.CandidatoSelecaoCandidato", b =>
                {
                    b.HasOne("Selecao.Domain.Entities.Candidato", "Candidato")
                        .WithMany("Selecoes")
                        .HasForeignKey("CandidatoId")
                        .IsRequired();

                    b.HasOne("Selecao.Domain.Entities.SelecaoCandidato", "Selecao")
                        .WithMany("Candidatos")
                        .HasForeignKey("SelecaoId")
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Selecao");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.EtapaSelecaoCandidato", b =>
                {
                    b.HasOne("Selecao.Domain.Entities.EtapaSelecao", "Etapa")
                        .WithMany("Selecoes")
                        .HasForeignKey("EtapaId")
                        .IsRequired();

                    b.HasOne("Selecao.Domain.Entities.SelecaoCandidato", "Selecao")
                        .WithMany("Etapas")
                        .HasForeignKey("SelecaoId")
                        .IsRequired();

                    b.Navigation("Etapa");

                    b.Navigation("Selecao");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.Candidato", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("Cursos");

                    b.Navigation("Experiencias");

                    b.Navigation("Formacao");

                    b.Navigation("Selecoes");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.EtapaSelecao", b =>
                {
                    b.Navigation("Selecoes");
                });

            modelBuilder.Entity("Selecao.Domain.Entities.SelecaoCandidato", b =>
                {
                    b.Navigation("Candidatos");

                    b.Navigation("Etapas");
                });
#pragma warning restore 612, 618
        }
    }
}
