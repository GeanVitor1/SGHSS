@using System.Globalization
@using SGHSSVidaPlus.Domain.Entities
@model SGHSSVidaPlus.Domain.Entities.Paciente;
@{
    var dados = "";

    if (Model.DataNascimento != DateTime.MinValue)
    {
        int idade = DateTime.Now.Year - Model.DataNascimento.Year;

        if (DateTime.Now < Model.DataNascimento.AddYears(idade))
            idade--;

        dados += $"<p><i class=\"fas fa-calendar-alt\"></i> Idade: {idade} anos</p>";
    }

    if (!string.IsNullOrWhiteSpace(Model.EstadoCivil))
        dados += $"<p><i class=\"fas fa-user-friends\"></i> Estado Cívil: {Model.EstadoCivil}</p>";

    if (!string.IsNullOrWhiteSpace(Model.CPF))
        dados += $"<p><i class=\"fas fa-id-card\"></i> CPF: {Model.CPF}</p>";

    var endereco = !string.IsNullOrWhiteSpace(Model.Endereco) ? $"<i class=\"fas fa-map-marker-alt\"></i> Endereço: {Model.Endereco}" : "";

    if (!string.IsNullOrWhiteSpace(endereco))
        dados += $"<p>{endereco}</p>";
}
<div class="row">
    <div class="col-md-4 text-white bg-dark py-5">
        <div class="d-flex justify-content-center mt-3">
            <div class="foto-curriculo d-flex justify-content-center align-items-center position-relative">
                <i class="fas fa-user fa-5x text-dark position-absolute top-50 start-50 translate-middle"></i>
            </div>
        </div>
        <hr class="mt-3" />
        <div style="margin-top: -18px;">
            <h4>Dados</h4>
            @Html.Raw(dados)
            <h4>Contatos</h4>
            @foreach (var contato in Model.Contatos)
            {
                var contatoEscrito = "";
                if (contato.Tipo == "Telefone Fixo")
                    contatoEscrito = $"<p><i class=\"fas fa-phone\"></i> Telefone Fixo: {contato.Contato}</p>";
                else if (contato.Tipo == "Telefone Celular")
                    contatoEscrito = $"<p><i class=\"fas fa-mobile-alt\"></i> Telefone Celular: {contato.Contato}</p>";
                else if (contato.Tipo == "Email")
                    contatoEscrito = $"<p><i class=\"fas fa-envelope\"></i> Email: {contato.Contato}</p>";
                else if (contato.Tipo == "Contato de Terceiro")
                    contatoEscrito = $"<p><i class=\"fas fa-phone-alt\"></i> Contato de Terceiro: {contato.Contato}</p>";
                else
                    contatoEscrito = $"<p><i class=\"fas fa-info-circle\"></i> {contato.Tipo}: {contato.Contato}</p>";

                @Html.Raw(contatoEscrito)
            }
        </div>
    </div>
    <div class="col-md-8 bg-white ps-3 pe-5 py-5">
        <h1 class="mt-3">@Model.Nome</h1>
        <div>
            <div class="d-flex align-items-center">
                <h4 class="me-2">Histórico Médico</h4>
                <div class="linha flex-grow-1"></div>
            </div>
            <ul>
                @if (Model.Historico != null && Model.Historico.Any())
                {
                    @foreach (var historico in Model.Historico.OrderByDescending(h => h.DataEvento))
                    {
                        var dataEventoFormatada = historico.DataEvento.HasValue ? historico.DataEvento.Value.ToString("dd/MM/yyyy") : "N/A";

                        <li class="mt-3">
                            <div>
                                <h6><b>@historico.Titulo</b></h6>
                                <p style="margin: -15px; margin-left: 2px;">Data: @dataEventoFormatada</p>
                                <p style="margin: -15px; margin-left: 2px;">Profissional: @historico.ProfissionalResponsavel</p>
                                <p style="margin: -15px; margin-left: 2px;">@historico.Descricao</p>
                            </div>
                        </li>
                    }
                }
                else
                {
                    <li>Nenhum registro de histórico encontrado.</li>
                }
            </ul>
        </div>
    </div>
</div>