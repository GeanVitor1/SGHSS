<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta charset="utf-8" />
    <title>SGHSSVidaPlus | @ViewBag.Title</title>
    <meta content="width=device-width, initial-scale=1.0, shrink-to-fit=no" name="viewport" />
    <link href="~/img/favicon.png" rel="shortcut icon" type="Img/x-icon">

    <link rel="stylesheet" href="~/css/fonts.min.css" />
    <link rel="stylesheet" href="~/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/plugins.min.css" />
    <link rel="stylesheet" href="~/css/kaiadmin.min.css" />
    <link rel="stylesheet" href="~/css/demo.css" />
    <link rel="stylesheet" href="~/lib/select2/select2.min.css">
    <link rel="stylesheet" href="~/lib/select2/select2-bootstrap-5-theme.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"> @* CSS para SweetAlert2 *@
    <link rel="stylesheet" href="~/css/site.css" />

    
    @using System.Text.Encodings.Web;

</head>

<body>
    <div class="wrapper">
        
        @if (Context.Request.Path != "/Identity/Account/Login")
        {
            <partial name="_SideBar" />
            <div class="main-panel">
                <div class="main-header">
                    <partial name="_NavBar" />
                </div>
                <div class="container">
                    <div class="page-inner">
                        <main role="main">
                            @RenderBody()
                        </main>
                    </div>
                </div>
            </div>
        }
        else
        {
            
            <main role="main" class="w-100">
                @RenderBody()
            </main>
        }
    </div>

   
    <script src="~/js/core/jquery-3.7.1.min.js"></script>
    <script src="~/js/core/popper.min.js"></script>
    <script src="~/js/core/bootstrap.min.js"></script>
    <script src="~/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
    <script src="~/js/plugin/chart.js/chart.min.js"></script>
    <script src="~/js/plugin/jquery.sparkline/jquery.sparkline.min.js"></script>
    <script src="~/js/plugin/chart-circle/circles.min.js"></script>
    <script src="~/js/plugin/datatables/datatables.min.js"></script>
    <script src="~/js/plugin/bootstrap-notify/bootstrap-notify.min.js"></script>

  
    @if (Context.Request.Path != "/Identity/Account/Login")
    {
        <script src="~/js/plugin/jsvectormap/jsvectormap.min.js"></script>
        <script src="~/js/plugin/jsvectormap/world.js"></script>
    }

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> @* SweetAlert2 para a animação boa *@

 
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

    <script src="~/js/kaiadmin.min.js"></script>
    <script src="~/js/setting-demo.js"></script>
    <script src="~/js/demo.js"></script>
    <script src="~/lib/select2/select2.full.min.js"></script>
    <script src="~/js/site.js"></script> @* Seu site.js pode ter outras lógicas globais *@

    @await RenderSectionAsync("Scripts", required: false)

 
    @if (TempData["success"] != null)
    {
        var mensagem = TempData["success"].ToString();
        <script>
            Swal.fire({
                title: 'Sucesso!',
                text: '@Html.Raw(JavaScriptEncoder.Default.Encode(mensagem))', // Usar JavaScriptEncoder
                icon: 'success',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer);
                    toast.addEventListener('mouseleave', Swal.resumeTimer);
                }
            });
        </script>
    }

    @if (TempData["error"] != null)
    {
        var mensagem = TempData["error"].ToString();
        <script>
            Swal.fire({
                title: 'Erro!',
                text: '@Html.Raw(JavaScriptEncoder.Default.Encode(mensagem))', // Usar JavaScriptEncoder
                icon: 'error',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer);
                    toast.addEventListener('mouseleave', Swal.resumeTimer);
                }
            });
        </script>
    }

    @if (!ViewData.ModelState.IsValid)
    {
        var erros = string.Join(" . ", ViewData.ModelState.Values.SelectMany(v => v.Errors).Select(e => e.ErrorMessage));
        {
           
        }
        <script>
            // Aqui, a lógica de 'showRegisterTab()' ou 'showLoginTab()' já está no login.cshtml
            // Este script do _Layout é apenas para alertas globais.
            // Para erros de ModelState, as mensagens individuais dos campos já devem aparecer.
            // Se você ainda quiser um Swal.fire para *todos* os erros de ModelState, use assim:
            // (Lembre-se que o "erros" pode ser vazio se houver apenas erros de validação de campo)
            @if (!string.IsNullOrEmpty(erros))
            {
                    <text>
                    Swal.fire({
                        title: 'Atenção!',
                        text: '@Html.Raw(JavaScriptEncoder.Default.Encode(erros))',
                        icon: 'warning',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 5000,
                        timerProgressBar: true,
                    });
                    </text>
            }
        </script>
    }
</body>

</html>